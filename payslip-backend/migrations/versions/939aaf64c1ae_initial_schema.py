"""initial schema

Revision ID: 939aaf64c1ae
Revises: 
Create Date: 2025-10-30 10:40:53.542604

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '939aaf64c1ae'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('discipline',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('position',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('grade', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('grade'),
    sa.UniqueConstraint('title')
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('manager', 'employee', name='userrole'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('employee',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('national_id', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('position_id', sa.UUID(), nullable=False),
    sa.Column('manager_id', sa.UUID(), nullable=True),
    sa.Column('discipline_id', sa.UUID(), nullable=True),
    sa.Column('employment_status', sa.String(), nullable=False),
    sa.Column('hire_date', sa.Date(), nullable=True),
    sa.Column('termination_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['discipline_id'], ['discipline.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['position_id'], ['position.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('emp_base_salary',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('base_salary', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('tax_percentage', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('effective_start_date', sa.Date(), nullable=True),
    sa.Column('effecitve_end_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('emp_deduction',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.Enum('tax', 'health', 'pension', 'other', name='deductiontype'), nullable=False),
    sa.Column('effective_start_date', sa.Date(), nullable=True),
    sa.Column('effective_end_date', sa.Date(), nullable=True),
    sa.Column('periodicity', sa.Enum('monthly', 'daily', 'once', name='periodicity'), nullable=False),
    sa.Column('percentage', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('default_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('calculation_method', sa.Enum('fixed', 'percentage', 'per_day', 'per_meal', name='calculationmethod'), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payroll_record',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('gross_pay', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('net_pay', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('total_deductions', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('run_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('timecard',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('worked_days', sa.Integer(), nullable=True),
    sa.Column('paid_leave_days', sa.Integer(), nullable=True),
    sa.Column('unpaid_leave_days', sa.Integer(), nullable=True),
    sa.Column('worked_hours', sa.Integer(), nullable=True),
    sa.Column('overtime_hours', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('timecard')
    op.drop_table('payroll_record')
    op.drop_table('emp_deduction')
    op.drop_table('emp_base_salary')
    op.drop_table('employee')
    op.drop_table('user')
    op.drop_table('position')
    op.drop_table('discipline')
    # ### end Alembic commands ###
